@model PagedList.IPagedList<SchoolApp.Models.Student>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<link href="~/Content/Site.css" rel="stylesheet" />


@{
    ViewBag.Title = "Students";
}

<h2>Students</h2>

<div id="modDialog" class="modal fade">
    <div id="dialogContent" class="modal-dialog"></div>
</div>

<div class="container" style="margin-top:3%">
    <div class="row">
        <div class="col-md-4">
            @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-info" })
        </div>

        <div class="col-md-8">
            @using (Html.BeginForm("Index", "Student", FormMethod.Get))
            {
                <div class="col-md-4 col-md-offset-6">
                    @Html.DropDownList("Gender", (SelectList)ViewBag.Gender, "All", new { @class = "form-control", onchange = "redirect(this.value)" })
                </div>              
            }
        </div>
    </div>
    <br />

    <div style="overflow-x:auto">
        <table class="table table-striped">
            <tr>
                <th>
                    @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink("Date Start", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    Gender
                </th>
                <th>
                    Starosta
                </th>
                <th>
                    Edit
                </th>
                <th>
                    Delete
                </th>
                <th>
                    Details
                </th>
                <th></th>
            </tr>


            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ClassDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Gender)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Starosta)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.ID }, new { @class = "item btn btn-primary btn-large" })
                    </td>
                    <td>
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { @class = "item btn btn-danger btn-large" })
                    </td>
                    <td>
                        @Html.ActionLink("Details", "Details", new { id = item.ID }, new { @class = "item btn btn-info btn-large" })
                    </td>
                    <td></td>
                </tr>
            }

        </table>
    </div>
</div>

@section scripts
{
    <script type="text/javascript">

        $(function () {
            $.ajaxSetup({ cache: false });
            $(".item").click(function (e) {

                e.preventDefault();
                $.get(this.href, function (data) {
                    $('#dialogContent').html(data);
                    $('#modDialog').modal('show');
                });
            });
        })
    </script>

    <script>
        function redirect(dropDownValue) {
            window.location.href = '/Student/Index?option=Gender&searchString=' + dropDownValue;
        }
    </script>
}
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
